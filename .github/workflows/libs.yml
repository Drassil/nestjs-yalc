name: libs pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

env:
  PROJECT_ID: libs
  NODE_VERSION: 16
  # other
  GITHUB_TOKEN: ${{ secrets.READ_PACKAGE_TOKEN }}
  NODE_ENV: 'pipeline'
  JWT_SECRET_PVT: 'dummydummy'
  JWT_SECRET_PUB: 'dummydummy'
jobs:
  #===========================
  #
  #  PREPARE PIPELINE
  #
  #============================
  prepare-pipeline:
    name: Prepare pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: 'recursive'

      - name: Setup
        id: setup
        if: ${{ fromJSON(inputs.setup_node) }}
        with:
          node_version: ${{ env.NODE_VERSION }}
          install_command: ci
        uses: drassil/gh-actions-collection/node-setup@master

      - name: Check npm version
        run: npm --version

  #===========================
  #
  #  RUN PARALLEL JOBS
  #
  #============================
  linter:
    name: Linter checks
    needs: prepare-pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: 'recursive'

      - name: Setup
        id: setup
        if: ${{ fromJSON(inputs.setup_node) }}
        with:
          node_version: ${{ env.NODE_VERSION }}
          install_command: ci
        uses: drassil/gh-actions-collection/node-setup@master

      - name: Lint check
        run: npm run lint:no-fix;

  test-unit-common:
    name: Common libs unit tests
    needs: prepare-pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: 'recursive'

      - name: Setup
        id: setup
        if: ${{ fromJSON(inputs.setup_node) }}
        with:
          node_version: ${{ env.NODE_VERSION }}
          install_command: ci
        uses: drassil/gh-actions-collection/node-setup@master

      - name: Test coverage
        run: |
          npm config set jestworkers=2
          npm run test:cov
